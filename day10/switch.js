let food = "melon";

switch (food) {
    case "apple":
        console.log("사과입니다.");
        break;
    case "banana":
        console.log("바나나입니다.");
        break;
    case "melon":
        console.log("멜론입니다.");
        break;
    default:
        console.log("과일이 아닙니다.");
        break;
}

//
// switch 문은 if-else 문보다 가독성이 좋고, 많은 조건을 처리할 때 유용합니다.
// 하지만, 조건이 많아질수록 코드가 길어질 수 있으므로,
// 적절한 상황에서 사용하는 것이 좋습니다.
//// switch 문은 주로 값이 고정된 경우에 사용되며,
// if-else 문은 조건이 복잡하거나 범위가 있는 경우에 사용됩니다.
// 또한, switch 문은 문자열, 숫자, 심볼 등과 같은 원시 값에 대해 사용되며,
// if-else 문은 객체나 배열 등 복잡한 데이터 구조에 대해서도 사용할 수 있습니다
//// switch 문은 조건이 많아질수록 가독성이 떨어질 수 있으므로,
// 적절한 상황에서 사용하는 것이 좋습니다.
// if-else 문은 조건이 복잡하거나 범위가 있는 경우에 사용되며,
// switch 문은 값이 고정된 경우에 사용됩니다.
// 또한, switch 문은 문자열, 숫자, 심볼 등과 같은 원시 값에 대해 사용되며,
// if-else 문은 객체나 배열 등 복잡한 데이터 구조에 대해서도 사용할 수 있습니다.
// switch 문은 조건이 많아질수록 가독성이 떨어질 수 있으므로,
// 적절한 상황에서 사용하는 것이 좋습니다.
// if-else 문은 조건이 복잡하거나 범위가 있는 경우에 사용되며,
// switch 문은 값이 고정된 경우에 사용됩니다.
// 또한, switch 문은 문자열, 숫자, 심볼 등과 같은 원시 값에 대해 사용되며,
// if-else 문은 객체나 배열 등 복잡한 데이터 구조에 대해서도 사용할 수 있습니다.
// switch 문은 조건이 많아질수록 가독성이 떨어질 수 있으므로,
// 적절한 상황에서 사용하는 것이 좋습니다.
// if-else 문은 조건이 복잡하거나 범위가 있는 경우에 사용되며,
// switch 문은 값이 고정된 경우에 사용됩니다.
// 또한, switch 문은 문자열, 숫자, 심볼 등과 같은 원시 값에 대해 사용되며,
// if-else 문은 객체나 배열 등 복잡한 데이터 구조

let score = 90;
let grade;
if (score >= 90 && score <= 100) {
    grade = "A++";
}
console. log("grade",grade) ;

